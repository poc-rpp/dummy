{"version":3,"file":"ngx-doc-viewer.js","sources":["ng://ngx-doc-viewer/document-viewer.component.ts","ng://ngx-doc-viewer/document-viewer.module.ts","ng://ngx-doc-viewer/ngx-doc-viewer.ts"],"sourcesContent":["import { Component, Input, NgZone, OnDestroy, OnChanges, SimpleChanges, Output } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl, SafeStyle } from '@angular/platform-browser';\r\nimport { take } from 'rxjs/operators';\r\nimport { Subscription, interval } from 'rxjs';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ngx-doc-viewer',\r\n    template: `<iframe id=\"iframe\" *ngIf=\"fullUrl\" frameBorder=\"0\" [src]=\"fullUrl\"></iframe> `,\r\n    styles: [`:host {\r\n        display: block;\r\n    }\r\n    iframe {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n    `]\r\n})\r\nexport class NgxDocViewerComponent implements OnChanges, OnDestroy {\r\n    public fullUrl: SafeResourceUrl = null;\r\n    private checkIFrameSubscription: Subscription = null;\r\n    private configuredViewer = 'google';\r\n\r\n    constructor(private domSanitizer: DomSanitizer, private ngZone: NgZone) { }\r\n    @Output() loaded: EventEmitter<any> = new EventEmitter();\r\n    @Input() url = '';\r\n    @Input() googleCheckInterval = 3000;\r\n    @Input() set viewer(viewer: string) {\r\n        const v = viewer.toLowerCase().trim();\r\n        if (v !== 'google' && v !== 'office') {\r\n            console.error(`Unsupported viewer: '${viewer}'. Supported viewers: google, office`);\r\n        }\r\n        this.configuredViewer = v;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.checkIFrameSubscription) {\r\n            this.checkIFrameSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if ((changes.url && changes.url.currentValue !== changes.url.previousValue) ||\r\n            changes.viewer && changes.viewer.currentValue !== changes.viewer.previousValue) {\r\n            const u = this.url.indexOf('/') ? encodeURIComponent(this.url) : this.url;\r\n            this.fullUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.configuredViewer === 'google' ?\r\n                `https://docs.google.com/gview?url=${u}&embedded=true` :\r\n                `https://view.officeapps.live.com/op/embed.aspx?src=${u}`);\r\n            // see: https://stackoverflow.com/questions/40414039/google-docs-viewer-returning-204-responses-no-longer-working-alternatives\r\n            // hack to reload iframe if it's not loaded.\r\n            // would maybe be better to use view.officeapps.live.com but seems not to work with sas token.\r\n            if (this.configuredViewer === 'google') {\r\n                this.ngZone.runOutsideAngular(() => {\r\n                    let iframe = document.querySelector('iframe');\r\n                    this.checkIFrame(iframe);\r\n                    // if it's not loaded after the googleIntervalCheck, then open load again.\r\n                    this.checkIFrameSubscription = interval(this.googleCheckInterval)\r\n                        .pipe(\r\n                            take(Math.round(this.googleCheckInterval === 0 ? 0 : 20000 / this.googleCheckInterval)))\r\n                        .subscribe(() => {\r\n                            if (iframe == null) {\r\n                                iframe = document.querySelector('iframe');\r\n                                this.checkIFrame(iframe);\r\n                            }\r\n                            this.reloadIFrame(iframe);\r\n                        });\r\n                });\r\n            }\r\n        }\r\n    }\r\n    checkIFrame(iframe: HTMLIFrameElement) {\r\n        if (iframe) {\r\n            iframe.onload = () => {\r\n                this.loaded.emit(null);\r\n                if (this.checkIFrameSubscription) {\r\n                    this.checkIFrameSubscription.unsubscribe();\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    reloadIFrame(iframe: HTMLIFrameElement) {\r\n        if (iframe) {\r\n            console.log('reloading..');\r\n            iframe.src = iframe.src;\r\n        }\r\n    }\r\n}\r\n","import { NgxDocViewerComponent } from './document-viewer.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [NgxDocViewerComponent],\r\n    exports: [NgxDocViewerComponent]\r\n})\r\nexport class NgxDocViewerModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}